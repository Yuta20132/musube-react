{"ast":null,"code":"var _jsxFileName = \"/Users/ueharayuuta/musube-react/src/components/accounts/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Typography, TextField, Button, Grid } from '@mui/material';\n//import { useNavigate } from \"react-router-dom\";\n\n// レスポンスデータの型を定義します。これはAPIからのレスポンスの形を表します。\n\n// formDataの型を定義します。これはユーザーがフォームに入力するデータの形を表します。\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // useStateを使用してフォームデータの状態を管理します。初期値はemailとpasswordの空文字列です。\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // ナビゲーションフックを使用して、後でページ遷移を行うための関数を取得します。\n  //const navigate = useNavigate();\n\n  // 入力フィールドが変更されたときに呼び出される関数です。入力された値をformData状態にセットします。\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // フォームが送信されたときに呼び出される非同期関数です。APIへのPOSTリクエストを行います。\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // axiosを使用してログインAPIエンドポイントにPOSTリクエストを送信します。\n      // レスポンスの型はLoginResponseです。\n      const response = await axios.post(\"http://127.0.0.1:8000/login/\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      // APIから返されたトークンをローカルストレージに保存します。\n      localStorage.setItem(\"access_token\", response.data.access);\n      localStorage.setItem(\"refresh_token\", response.data.refresh);\n      // ログイン成功後にリダイレクトします。\n      //navigate('/login-success');\n    } catch (error) {\n      console.error(error);\n      alert(\"Login failed\");\n    }\n  };\n\n  // コンポーネントのUI部分です。フォーム入力フィールドと送信ボタンが含まれます。\n  return (\n    /*#__PURE__*/\n    /*\n    <div>\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} value={formData.email} required />\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={formData.password} required />\n            <button type=\"submit\">Login</button>\n        </form>\n    </div>\n    */\n    _jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: formData.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              value: formData.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Login, \"YFSp2x4UHtLo6FqraOiTU7gZju0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Container","Typography","TextField","Button","Grid","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","headers","localStorage","setItem","data","access","refresh","error","console","alert","component","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","container","spacing","item","xs","required","fullWidth","id","label","autoComplete","onChange","type","color","_c","$RefreshReg$"],"sources":["/Users/ueharayuuta/musube-react/src/components/accounts/Login/Login.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport axios from \"axios\";\nimport { Container, Typography, TextField, Button, Grid } from '@mui/material';\n//import { useNavigate } from \"react-router-dom\";\n\n\n// レスポンスデータの型を定義します。これはAPIからのレスポンスの形を表します。\ninterface LoginResponse {\n    access: string;\n    refresh: string;\n}\n\n// formDataの型を定義します。これはユーザーがフォームに入力するデータの形を表します。\ninterface FormData {\n    email: string;\n    password: string;\n}\n\nconst Login = () => {\n    // useStateを使用してフォームデータの状態を管理します。初期値はemailとpasswordの空文字列です。\n    const [formData, setFormData] = useState<FormData>({\n        email: \"\",\n        password: \"\"\n    });\n\n    // ナビゲーションフックを使用して、後でページ遷移を行うための関数を取得します。\n    //const navigate = useNavigate();\n\n    // 入力フィールドが変更されたときに呼び出される関数です。入力された値をformData状態にセットします。\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // フォームが送信されたときに呼び出される非同期関数です。APIへのPOSTリクエストを行います。\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        \n        try {\n            // axiosを使用してログインAPIエンドポイントにPOSTリクエストを送信します。\n            // レスポンスの型はLoginResponseです。\n            const response = await axios.post<LoginResponse>(\"http://127.0.0.1:8000/login/\", formData, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            // APIから返されたトークンをローカルストレージに保存します。\n            localStorage.setItem(\"access_token\", response.data.access);\n            localStorage.setItem(\"refresh_token\", response.data.refresh);\n            // ログイン成功後にリダイレクトします。\n            //navigate('/login-success');\n        } catch (error) {\n            console.error(error);\n            alert(\"Login failed\");\n        }\n    };\n\n    // コンポーネントのUI部分です。フォーム入力フィールドと送信ボタンが含まれます。\n    return (\n        /*\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} value={formData.email} required />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={formData.password} required />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n        */\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Typography component=\"h1\" variant=\"h5\">Login</Typography>\n            <form onSubmit={handleSubmit} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={formData.email}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}