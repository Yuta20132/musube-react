{"ast":null,"code":"var _jsxFileName = \"/Users/himegitaichi/Desktop/\\u4E0A\\u539F/musube-react/src/components/accounts/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n// レスポンスデータの型を定義します。これはAPIからのレスポンスの形を表します。\n\n// formDataの型を定義します。これはユーザーがフォームに入力するデータの形を表します。\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // useStateを使用してフォームデータの状態を管理します。初期値はemailとpasswordの空文字列です。\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // ナビゲーションフックを使用して、後でページ遷移を行うための関数を取得します。\n  const navigate = useNavigate();\n\n  // 入力フィールドが変更されたときに呼び出される関数です。入力された値をformData状態にセットします。\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // フォームが送信されたときに呼び出される非同期関数です。APIへのPOSTリクエストを行います。\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // axiosを使用してログインAPIエンドポイントにPOSTリクエストを送信します。\n      // レスポンスの型はLoginResponseです。\n      const response = await axios.post(\"http://127.0.0.1:8000/login/\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      // APIから返されたトークンをローカルストレージに保存します。\n      localStorage.setItem(\"access_token\", response.data.access);\n      localStorage.setItem(\"refresh_token\", response.data.refresh);\n      // ログイン成功後にリダイレクトします。\n      navigate('/login-success');\n    } catch (error) {\n      console.error(error);\n      alert(\"Login failed\");\n    }\n  };\n\n  // コンポーネントのUI部分です。フォーム入力フィールドと送信ボタンが含まれます。\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        value: formData.email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        value: formData.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"oNrURdy6aVRSrhabDVO5VWQ7cwQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","headers","localStorage","setItem","data","access","refresh","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/himegitaichi/Desktop/上原/musube-react/src/components/accounts/Login/Login.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n// レスポンスデータの型を定義します。これはAPIからのレスポンスの形を表します。\ninterface LoginResponse {\n    access: string;\n    refresh: string;\n}\n\n// formDataの型を定義します。これはユーザーがフォームに入力するデータの形を表します。\ninterface FormData {\n    email: string;\n    password: string;\n}\n\nconst Login = () => {\n    // useStateを使用してフォームデータの状態を管理します。初期値はemailとpasswordの空文字列です。\n    const [formData, setFormData] = useState<FormData>({\n        email: \"\",\n        password: \"\"\n    });\n\n    // ナビゲーションフックを使用して、後でページ遷移を行うための関数を取得します。\n    const navigate = useNavigate();\n\n    // 入力フィールドが変更されたときに呼び出される関数です。入力された値をformData状態にセットします。\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // フォームが送信されたときに呼び出される非同期関数です。APIへのPOSTリクエストを行います。\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        \n        try {\n            // axiosを使用してログインAPIエンドポイントにPOSTリクエストを送信します。\n            // レスポンスの型はLoginResponseです。\n            const response = await axios.post<LoginResponse>(\"http://127.0.0.1:8000/login/\", formData, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            // APIから返されたトークンをローカルストレージに保存します。\n            localStorage.setItem(\"access_token\", response.data.access);\n            localStorage.setItem(\"refresh_token\", response.data.refresh);\n            // ログイン成功後にリダイレクトします。\n            navigate('/login-success');\n        } catch (error) {\n            console.error(error);\n            alert(\"Login failed\");\n        }\n    };\n\n    // コンポーネントのUI部分です。フォーム入力フィールドと送信ボタンが含まれます。\n    return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} value={formData.email} required />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={formData.password} required />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgC,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;;AAG9C;;AAMA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAW;IAC/CS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,YAAY,GAAIC,CAAgC,IAAK;IACvDL,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC9B,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOJ,CAA6B,IAAK;IAC1DA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACA;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAgB,8BAA8B,EAAEb,QAAQ,EAAE;QACvFc,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF;MACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,QAAQ,CAACK,IAAI,CAACC,MAAM,CAAC;MAC1DH,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAACE,OAAO,CAAC;MAC5D;MACAf,QAAQ,CAAC,gBAAgB,CAAC;IAC9B,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,cAAc,CAAC;IACzB;EACJ,CAAC;;EAED;EACA,oBACIzB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd9B,OAAA;MAAM+B,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBACzB1B,OAAA;QAAOgC,IAAI,EAAC,OAAO;QAACrB,IAAI,EAAC,OAAO;QAACsB,WAAW,EAAC,OAAO;QAACC,QAAQ,EAAE1B,YAAa;QAACI,KAAK,EAAET,QAAQ,CAACE,KAAM;QAAC8B,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/G9B,OAAA;QAAOgC,IAAI,EAAC,UAAU;QAACrB,IAAI,EAAC,UAAU;QAACsB,WAAW,EAAC,UAAU;QAACC,QAAQ,EAAE1B,YAAa;QAACI,KAAK,EAAET,QAAQ,CAACG,QAAS;QAAC6B,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3H9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC5B,EAAA,CApDID,KAAK;EAAA,QAQUH,WAAW;AAAA;AAAAsC,EAAA,GAR1BnC,KAAK;AAsDX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}